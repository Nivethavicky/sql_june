-- queries



show databases;
use project;


-- query 1

-- Retrieve All South Indian Restaurants
SELECT * FROM restaurants WHERE cuisine_type = 'South Indian';


-- Retrieve All North Indian Restaurants
SELECT * FROM restaurants WHERE cuisine_type = 'north Indian';

-- Retrieve All karnataka style Restaurants
SELECT * FROM restaurants WHERE cuisine_type = 'karnataka style';


-- query 2
-- Retrieve Menu Items for a Specific Restaurant
SELECT * FROM menu_items WHERE restaurant_id = 1;
SELECT * FROM menu_items WHERE restaurant_id = 2;
SELECT * FROM menu_items WHERE restaurant_id = 3;
SELECT * FROM menu_items WHERE restaurant_id = 4;
SELECT * FROM menu_items WHERE restaurant_id = 5;


-- Retrieve menu items where price <200
select name,price from menu_items where price <200;
select name,price from menu_items where price <100;

-- query3
-- Retrieve Customers

SELECT * FROM customers;

-- query 4
-- Retrieve Orders Placed by a Specific Customer

SELECT * FROM orders WHERE customer_id = 1;

-- query 5
-- Retrieve Order Items for a Specific Order

SELECT * FROM order_items WHERE order_id = 1;

-- query 6
-- Calculate Total Amount of an Order

SELECT SUM(quantity * unit_price) AS total_amount FROM order_items WHERE order_id = 1;


-- query 7
-- Calculate Total Sales for Each South Indian Restaurant


SELECT r.name AS restaurant_name, SUM(oi.quantity * mi.price) AS total_sales
FROM restaurants r
JOIN menu_items mi ON r.restaurant_id = mi.restaurant_id
JOIN order_items oi ON mi.item_id = oi.item_id
JOIN orders o ON oi.order_id = o.order_id
WHERE r.cuisine_type = 'South Indian'
GROUP BY r.name;

-- query 8
-- Retrieve Orders with Status "Delivered"

SELECT * FROM orders WHERE status = 'Delivered';

-- query 9
-- Retrieve Orders Placed Today


SELECT * FROM orders WHERE DATE(order_date) = CURDATE();

-- query 10
-- Retrieve Customers Who Ordered Masala Dosa

SELECT c.*
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_items oi ON o.order_id = oi.order_id
JOIN menu_items mi ON oi.item_id = mi.item_id
JOIN restaurants r ON mi.restaurant_id = r.restaurant_id
WHERE r.cuisine_type = 'South Indian' AND mi.name = 'Masala Dosa';

-- 11. Retrieve All Orders for a Specific Customer
-- Retrieve all orders placed by a specific customer (e.g., customer_id = 1):


SELECT * FROM orders
WHERE customer_id = 1;


-- 2. Retrieve Total Amount Spent by Each Customer
-- Calculate the total amount spent by each customer:


SELECT customer_id, SUM(total_amount) AS total_spent
FROM orders
GROUP BY customer_id;


-- 3. Retrieve All Menu Items for a Specific Restaurant
-- Retrieve all menu items offered by a specific restaurant (e.g., restaurant_id = 1):


SELECT * FROM menu_items
WHERE restaurant_id = 1;



-- 4. Retrieve All Order Items for a Specific Order
-- Retrieve all items for a specific order (e.g., order_id = 1):


SELECT * FROM order_items
WHERE order_id = 1;


-- 5. Retrieve Orders with a Total Amount Above a Certain Value
-- Retrieve all orders where the total amount is above 300:


SELECT * FROM orders
WHERE total_amount > 100;


-- 6. Update Order Status
-- Update the status of a specific order (e.g., order_id = 1 to 'Delivered'):

UPDATE orders
SET status = 'Delivered'
WHERE order_id = 1;



-- 7. Delete a Customer
-- Delete a customer and all their related data (e.g., customer_id = 1):


-- DELETE FROM customers
-- WHERE customer_id = 1;



-- 8. Retrieve Popular Menu Items
-- Retrieve the top 5 most frequently ordered menu items:

SELECT item_id, COUNT(*) AS order_count
FROM order_items
GROUP BY item_id
ORDER BY order_count DESC
LIMIT 5;


-- 9. Retrieve Revenue per Restaurant
-- Calculate the total revenue generated by each restaurant:


SELECT restaurant_id, SUM(total_amount) AS total_revenue
FROM orders
GROUP BY restaurant_id;



-- 10. Retrieve Average Order Value per Customer
-- Calculate the average order value for each customer:

SELECT customer_id, AVG(total_amount) AS average_order_value
FROM orders
GROUP BY customer_id;


-- 11. Retrieve Orders Within a Date Range
-- Retrieve all orders placed within a specific date range:


SELECT * FROM orders
WHERE order_date BETWEEN '2024-01-01' AND '2024-12-31';


-- 12. Count Orders by Status
-- Count the number of orders by each status:


SELECT status, COUNT(*) AS order_count
FROM orders
GROUP BY status;


-- 13. Retrieve Order Details with Customer and Restaurant Information
-- Retrieve detailed information about orders, including customer and restaurant details:


SELECT o.order_id, o.order_date, o.total_amount, o.status,
       c.full_name AS customer_name, c.address AS customer_address,
       r.name AS restaurant_name, r.address AS restaurant_address
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
JOIN restaurants r ON o.restaurant_id = r.restaurant_id;


-- 14. Insert a New Customer
-- Insert a new customer into the customers table:

INSERT INTO customers (username, email, password, full_name, address)
VALUES ('new_user', 'new.user@example.com', 'newpassword', 'New User', '789 New St');


-- 15. Retrieve Orders and Order Items Together
-- Retrieve orders along with their associated order items:


SELECT o.order_id, o.order_date, o.total_amount, o.status,
       oi.item_id, oi.quantity, oi.unit_price
FROM orders o
JOIN order_items oi ON o.order_id = oi.order_id;



-- views

create view mixed_details
as
SELECT o.order_id, o.order_date, o.total_amount, o.status,
       c.full_name AS customer_name, c.address AS customer_address,
       r.name AS restaurant_name, r.address AS restaurant_address
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
JOIN restaurants r ON o.restaurant_id = r.restaurant_id;


select * from mixed_details;
select * from mixed_details where restaurant_name="saravana bhavan";

select * from mixed_details where restaurant_name="Adyar Ananda Bhavan";









